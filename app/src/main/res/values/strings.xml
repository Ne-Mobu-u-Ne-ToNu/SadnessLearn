<resources>
    <string name="app_name">Sadness Learn</string>
    <string name="authors">by SadnessMood</string>
    <string name="authorization">Авторизация</string>
    <string name="auth_options">Войдите или зарегестрируйтесь</string>
    <string name="sign_in">Вход</string>
    <string name="register">Регистрация</string>
    <string name="reg_text_info">Зарегестрируйтесь, чтобы пользоваться приложением и следить за прогрессом</string>
    <string name="email_hint">e-mail: example@mail.com</string>
    <string name="name_hint">Username:</string>
    <string name="password_hint">Password:</string>
    <string name="password_conf_hint">Confirm Password:</string>
    <string name="sign_in_text_info">Для продолжения войдите в аккаунт</string>
    <string name="reset_password">Сбросить пароль</string>
    <string name="reset_password_info">Для сброса пароля введите адрес электронной почты, указанный при регистрации. На него вам будет отправлено письмо с инструкцией</string>
    <string name="forgot_password"><u>Забыли пароль?</u></string>
    <string name="password_length">Длина пароля минимум 6 символов</string>
    <string name="btn_back_description">Назад</string>
    <string name="sandbox">Песочница</string>
    <string name="exit">Выход</string>
    <string name="description_run">Run code</string>
    <string name="settings">Настройки</string>
    <string name="tasks">Задачи</string>
    <string name="plot">Сюжет</string>
    <string name="task_types">Типы задач</string>
    <string name="code_task">Код</string>
    <string name="block_task">Блоки</string>
    <string name="solving">Решение</string>
    <string name="task">Задача</string>
    <string name="item">Item</string>

    <string-array name="languages">
        <item>Java</item>
        <item>C#</item>
        <item>C++</item>
    </string-array>

    <string-array name="java_keywords">
        <item>abstract</item>
        <item>assert</item>
        <item>boolean</item>
        <item>break</item>
        <item>byte</item>
        <item>case</item>
        <item>catch</item>
        <item>char</item>
        <item>class</item>
        <item>const</item>
        <item>continue</item>
        <item>default</item>
        <item>do</item>
        <item>double</item>
        <item>else</item>
        <item>enum</item>
        <item>extends</item>
        <item>final</item>
        <item>finally</item>
        <item>float</item>
        <item>for</item>
        <item>goto</item>
        <item>if</item>
        <item>implements</item>
        <item>import</item>
        <item>instanceof</item>
        <item>int</item>
        <item>interface</item>
        <item>long</item>
        <item>native</item>
        <item>new</item>
        <item>package</item>
        <item>private</item>
        <item>protected</item>
        <item>public</item>
        <item>return</item>
        <item>short</item>
        <item>static</item>
        <item>strictfp</item>
        <item>super</item>
        <item>switch</item>
        <item>synchronized</item>
        <item>this</item>
        <item>throw</item>
        <item>throws</item>
        <item>transient</item>
        <item>try</item>
        <item>void</item>
        <item>volatile</item>
        <item>while</item>
    </string-array>

    <string-array name="CSharpKeywords">
        <item>abstract</item>
        <item>as</item>
        <item>base</item>
        <item>bool</item>
        <item>break</item>
        <item>byte</item>
        <item>case</item>
        <item>catch</item>
        <item>char</item>
        <item>checked</item>
        <item>class</item>
        <item>const</item>
        <item>continue</item>
        <item>decimal</item>
        <item>default</item>
        <item>delegate</item>
        <item>do</item>
        <item>double</item>
        <item>else</item>
        <item>enum</item>
        <item>event</item>
        <item>explicit</item>
        <item>extern</item>
        <item>false</item>
        <item>finally</item>
        <item>fixed</item>
        <item>float</item>
        <item>for</item>
        <item>foreach</item>
        <item>goto</item>
        <item>if</item>
        <item>implicit</item>
        <item>in</item>
        <item>int</item>
        <item>interface</item>
        <item>internal</item>
        <item>is</item>
        <item>lock</item>
        <item>long</item>
        <item>namespace</item>
        <item>new</item>
        <item>null</item>
        <item>object</item>
        <item>operator</item>
        <item>out</item>
        <item>override</item>
        <item>params</item>
        <item>private</item>
        <item>protected</item>
        <item>public</item>
        <item>readonly</item>
        <item>ref</item>
        <item>return</item>
        <item>sbyte</item>
        <item>sealed</item>
        <item>short</item>
        <item>sizeof</item>
        <item>stackalloc</item>
        <item>static</item>
        <item>string</item>
        <item>struct</item>
        <item>switch</item>
        <item>this</item>
        <item>throw</item>
        <item>true</item>
        <item>try</item>
        <item>typeof</item>
        <item>uint</item>
        <item>ulong</item>
        <item>unchecked</item>
        <item>unsafe</item>
        <item>ushort</item>
        <item>using</item>
        <item>var</item>
        <item>virtual</item>
        <item>void</item>
        <item>volatile</item>
        <item>while</item>
    </string-array>

    <string-array name="CPPKeywords">
        <item>alignas</item>
        <item>alignof</item>
        <item>and</item>
        <item>and_eq</item>
        <item>asm</item>
        <item>atomic_cancel</item>
        <item>atomic_commit</item>
        <item>atomic_noexcept</item>
        <item>auto</item>
        <item>bitand</item>
        <item>bitor</item>
        <item>bool</item>
        <item>break</item>
        <item>case</item>
        <item>catch</item>
        <item>char</item>
        <item>char8_t</item>
        <item>char16_t</item>
        <item>char32_t</item>
        <item>class</item>
        <item>compl</item>
        <item>concept</item>
        <item>const</item>
        <item>consteval</item>
        <item>constexpr</item>
        <item>constinit</item>
        <item>const_cast</item>
        <item>continue</item>
        <item>co_await</item>
        <item>co_return</item>
        <item>co_yield</item>
        <item>decltype</item>
        <item>default</item>
        <item>delete</item>
        <item>do</item>
        <item>double</item>
        <item>dynamic_cast</item>
        <item>else</item>
        <item>enum</item>
        <item>explicit</item>
        <item>export</item>
        <item>extern</item>
        <item>false</item>
        <item>float</item>
        <item>for</item>
        <item>friend</item>
        <item>goto</item>
        <item>if</item>
        <item>inline</item>
        <item>int</item>
        <item>long</item>
        <item>mutable</item>
        <item>namespace</item>
        <item>new</item>
        <item>noexcept</item>
        <item>not</item>
        <item>not_eq</item>
        <item>nullptr</item>
        <item>operator</item>
        <item>or</item>
        <item>or_eq</item>
        <item>private</item>
        <item>protected</item>
        <item>public</item>
        <item>reflexpr</item>
        <item>register</item>
        <item>reinterpret_cast</item>
        <item>requires</item>
        <item>return</item>
        <item>short</item>
        <item>signed</item>
        <item>sizeof</item>
        <item>static</item>
        <item>static_assert</item>
        <item>static_cast</item>
        <item>struct</item>
        <item>switch</item>
        <item>synchronized</item>
        <item>template</item>
        <item>this</item>
        <item>thread_local</item>
        <item>throw</item>
        <item>true</item>
        <item>try</item>
        <item>typedef</item>
        <item>typeid</item>
        <item>typename</item>
        "union|unsigned|using|virtual|void|volatile|wchar_t|while|xor|xor_eq
        <item>union</item>
        <item>unsigned</item>
        <item>using</item>
        <item>virtual</item>
        <item>void</item>
        <item>volatile</item>
        <item>wchar_t</item>
        <item>while</item>
        <item>xor</item>
        <item>xor_eq</item>
    </string-array>
</resources>